{"version":3,"sources":["App.js","index.js"],"names":["initialUserFormState","name","initialPostFormState","text","App","useState","users","setUsers","userForm","setUserForm","isEditingUser","setEditingUser","postForm","setPostForm","setEditingPost","useEffect","axios","get","then","response","data","catch","err","console","log","removeUser","id","e","delete","filter","user","Number","editPost","userid","className","onSubmit","preventDefault","post","put","map","type","placeholder","required","value","onChange","target","key","onClick","find","posts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2bc96f9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst initialUserFormState = {\n  name: \"\",\n}\nconst initialPostFormState = {\n  text: \"\",\n}\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [userForm, setUserForm] = useState(initialUserFormState);\n  const [isEditingUser, setEditingUser] = useState(0);\n\n  const [postForm, setPostForm] = useState(initialPostFormState);\n  const [isEditingPost, setEditingPost] = useState(0);\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/api/users').then(response => {\n      setUsers(response.data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const onUserInputChange = e => {\n    setUserForm({ ...userForm, [e.target.name]: e.target.value });\n  }\n\n  const onUserSubmit = e => {\n    e.preventDefault();\n    if (isEditingUser === 0) {\n      axios.post('http://localhost:4000/api/users', userForm).then(response => {\n        setUsers([...users, { ...userForm, id: response.data.id }]);\n      }).catch(err => console.log(err));\n    } else {\n      axios.put('http://localhost:4000/api/users/' + isEditingUser, userForm).then(response => {\n        setUsers(users.map(user => {\n          if (Number(user.id) === isEditingUser) return { ...user, ...userForm }\n          return user;\n        }));\n      }).catch(err => console.log(err));\n    }\n    setUserForm(initialUserFormState);\n    setEditingUser(0);\n  }\n\n  const onPostInputChange = e => {\n    setPostForm({ ...postForm, [e.target.name]: e.target.value });\n  }\n\n  const onPostSubmit = e => {\n    /*e.preventDefault();\n    if (isEditingPost === 0) {\n      axios.post('http://localhost:4000/api/users', postForm).then(response => {\n        setPosts([...posts, { ...postForm, id: response.data.id }]);\n      }).catch(err => console.log(err));\n    } else {\n      axios.put('http://localhost:4000/api/posts/' + isEditingPost, postForm).then(response => {\n        setPosts(posts.map(post => {\n          if (Number(post.id) === isEditingPost) return { ...post, ...postForm }\n          return post;\n        }));\n      }).catch(err => console.log(err));\n    }\n    setPostForm(initialPostFormState);\n    setEditingPost(0);*/\n  }\n\n  const editUser = id => e => {\n    setEditingUser(id);\n    setUserForm(users.find(user => Number(user.id) === Number(id)))\n  }\n\n  const removeUser = id => e => {\n    axios.delete('http://localhost:4000/api/users/' + id).then(response => {\n      setUsers(users.filter(user => Number(user.id) !== Number(id)));\n    }).catch(err => console.log(err));\n  }\n\n  const editPost = (id, userid) => e => {\n    setEditingPost(id);\n    //setPostForm(posts.find(user => Number(user.id) === Number(id)))\n  }\n\n  const removePost = (id, userid) => e => {\n    /*axios.delete('http://localhost:4000/api/posts/' + id).then(response => {\n      setPosts(posts.filter(post => Number(post.id) !== Number(id)));\n    }).catch(err => console.log(err));*/\n  }\n\n  return (\n    <div className=\"App\">\n      <h2>Users form</h2>\n      <form onSubmit={onUserSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"User name here\"\n          required\n          value={userForm.name}\n          onChange={onUserInputChange}\n        />\n        <button className=\"submitUser\">Submit</button>\n      </form>\n      <br />\n      <h2>Posts form</h2>\n      <form onSubmit={onPostSubmit}>\n        <input\n          type=\"text\"\n          name=\"text\"\n          placeholder=\"Post text here\"\n          required\n          value={postForm.text}\n          onChange={onPostInputChange}\n        />\n        <button className=\"submitUser\">Submit</button>\n      </form>\n      <br />\n      <h1>Users list</h1>\n      <div className=\"users\">\n        {\n          users ? users.map(user => (\n            <div key={user.id} className=\"user\">\n              <p>ID: {user.id}</p>\n              <p>Name: {user.name}</p>\n              <button className=\"editUser\" onClick={editUser(user.id)}>Edit</button>\n              <button className=\"removeUser\" onClick={removeUser(user.id)}>Remove</button>\n              <h2>Posts</h2>\n              <div className=\"posts\">\n                {\n                  user.posts ? user.posts.map(post => (\n                    <div className=\"post\">\n                      <p>ID: {post.id}</p>\n                      <p>Text: {post.text}</p>\n                      <button className=\"editPost\" onClick={editPost(post.id, user.id)}>Edit</button>\n                      <button className=\"removePost\" onClick={removePost(post.id, user.id)}>Remove</button>\n                    </div>\n                  )) : null\n                }\n\n              </div>\n            </div>\n          )) : null\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}